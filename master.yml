---
# tasks file for master
- hosts: master
  
  tasks:
          - name: for_docker_repo
            copy:
                    src: /root/docker.repo
                    dest: /etc/yum.repos.d/docker.repo
          - name: installing docker
            command: "yum install docker-ce --nobest -y"
          - name: starting services
            service:
                    name: docker
                    state: started
                    enabled: yes
          - name: installing docker package
            pip:
                    name: docker
                    executable: pip3

          - name: copying kub.sh file
            copy:
                    src: /root/kub.sh
                    dest: /kub.sh

          - name: k8s installing          
            command: "bash /kub.sh"
          - name: starting kubelet service
            service:
                    name: kubelet
                    state: started
                    enabled: yes
          - name: correcting the CRI error
            command: "rm -f /etc/containerd/config.toml "
          - name: restarting conatinerd
            service:
                    name: containerd
                    state: restarted
          - name: changing driver
            copy:
                   dest: /etc/docker/daemon.json
                   content: |
                           {
                             "exec-opts": ["native.cgroupdriver=systemd"]
                           }
          - name: restarting docker service
            service:
                   name: docker
                   state: restarted
          - name: installing iproutetc
            yum:
                   name:
                         - iproute-tc
                   state: present
          - name: initiating kubeadm
            command: "kubeadm init --apiserver-advertise-address=10.1.0.5 --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
          - name: creating token
            shell: " kubeadm token create --print-join-command >> token.sh"
          - name: fetching token
            fetch:
                   src: /home/paromita/token.sh
                   dest: /tmp/token.sh
                   flat: yes
          - name: creating kctl.sh
            copy:
                   dest: /tmp/kctl.sh
                   content: |
                           mkdir -p $HOME/.kube
                            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
                            sudo chown $(id -u):$(id -g) $HOME/.kube/config
          - name: running kctl.sh
            shell: bash /tmp/kctl.sh
          - name: applying flannel
            command: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

